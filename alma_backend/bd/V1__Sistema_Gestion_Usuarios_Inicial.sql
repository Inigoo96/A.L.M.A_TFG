-- =====================================================
-- V1: SISTEMA DE GESTIÓN DE USUARIOS INICIAL
-- Define las tablas base para organizaciones y usuarios.
-- =====================================================

-- =====================================================
-- TABLA: ORGANIZACION
-- =====================================================
CREATE TABLE ORGANIZACION (
    ID_ORGANIZACION SERIAL,
    CIF VARCHAR(9) NOT NULL,
    NUMERO_SEGURIDAD_SOCIAL VARCHAR(20) NOT NULL,
    NOMBRE_OFICIAL VARCHAR(255) NOT NULL,
    DIRECCION VARCHAR(255) NOT NULL,
    CODIGO_REGCESS VARCHAR(50) NOT NULL,
    EMAIL_CORPORATIVO VARCHAR(100) NOT NULL,
    TELEFONO_CONTACTO VARCHAR(20) NOT NULL,
    DOCUMENTO_CIF_URL VARCHAR(255),
    DOCUMENTO_SEGURIDAD_SOCIAL_URL VARCHAR(255),
    ESTADO_VERIFICACION VARCHAR(30) NOT NULL DEFAULT 'PENDIENTE_VERIFICACION',
    MOTIVO_RECHAZO VARCHAR(500),
    FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FECHA_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT PK_ORGANIZACION PRIMARY KEY (ID_ORGANIZACION),
    CONSTRAINT UQ_CIF UNIQUE (CIF),
    CONSTRAINT UQ_EMAIL_CORPORATIVO UNIQUE (EMAIL_CORPORATIVO),
    CONSTRAINT CK_ESTADO_VERIFICACION CHECK (ESTADO_VERIFICACION IN ('PENDIENTE_VERIFICACION', 'EN_REVISION', 'VERIFICADA', 'RECHAZADA'))
);

CREATE INDEX idx_organizacion_cif ON ORGANIZACION(CIF);
CREATE INDEX idx_organizacion_estado ON ORGANIZACION(ESTADO_VERIFICACION);

-- =====================================================
-- TABLA: USUARIO
-- =====================================================
CREATE TABLE USUARIO (
    ID_USUARIO SERIAL,
    DNI VARCHAR(15) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    NOMBRE VARCHAR(50) NOT NULL,
    APELLIDOS VARCHAR(100),
    TELEFONO VARCHAR(20),
    TIPO_USUARIO VARCHAR(20) NOT NULL,
    ID_ORGANIZACION INTEGER NOT NULL,
    ACTIVO BOOLEAN DEFAULT TRUE,
    PASSWORD_TEMPORAL BOOLEAN DEFAULT TRUE,
    CARGO VARCHAR(100),
    DOCUMENTO_CARGO_URL VARCHAR(255),
    FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ULTIMO_ACCESO TIMESTAMP,
    FECHA_ULTIMA_MODIFICACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT PK_USUARIO PRIMARY KEY (ID_USUARIO),
    CONSTRAINT UQ_DNI UNIQUE (DNI),
    CONSTRAINT UQ_EMAIL UNIQUE (EMAIL),
    CONSTRAINT CK_TIPO_USUARIO CHECK (TIPO_USUARIO IN ('PACIENTE', 'PROFESIONAL', 'ADMIN_ORGANIZACION', 'SUPER_ADMIN')),
    CONSTRAINT FK_USUARIO_ORGANIZACION FOREIGN KEY (ID_ORGANIZACION)
        REFERENCES ORGANIZACION(ID_ORGANIZACION) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE INDEX idx_usuario_dni ON USUARIO(DNI);
CREATE INDEX idx_usuario_email ON USUARIO(EMAIL);
CREATE INDEX idx_usuario_tipo ON USUARIO(TIPO_USUARIO);
CREATE INDEX idx_usuario_organizacion ON USUARIO(ID_ORGANIZACION);
CREATE INDEX idx_usuario_activo ON USUARIO(ACTIVO);

-- =====================================================
-- TRIGGERS PARA AUDITORÍA AUTOMÁTICA
-- =====================================================

CREATE OR REPLACE FUNCTION actualizar_fecha_modificacion()
RETURNS TRIGGER AS $$
BEGIN
    NEW.FECHA_ULTIMA_MODIFICACION = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_organizacion_modificacion
    BEFORE UPDATE ON ORGANIZACION
    FOR EACH ROW
    EXECUTE FUNCTION actualizar_fecha_modificacion();

CREATE TRIGGER trigger_usuario_modificacion
    BEFORE UPDATE ON USUARIO
    FOR EACH ROW
    EXECUTE FUNCTION actualizar_fecha_modificacion();

-- =====================================================
-- FIN DE MIGRACIÓN V1
-- =====================================================
